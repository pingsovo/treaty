import React, { useState, useEffect } from 'react';

// ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ
function App() {
  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•, ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠, ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå, ‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á, ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
  const [people, setPeople] = useState([
    { id: 'ping', name: '‡∏õ‡∏¥‡∏á', items: [] },
    { id: 'ou', name: '‡∏≠‡∏π‡πã', items: [] },
    { id: 'mudmee', name: '‡∏°‡∏±‡∏î‡∏´‡∏°‡∏µ‡πà', items: [] },
    { id: 'm', name: '‡πÄ‡∏≠‡πá‡∏°', items: [] },
    { id: 'ploy', name: '‡∏û‡∏•‡∏≠‡∏¢', items: [] },
    { id: 'gugg', name: '‡∏Å‡∏±‡πä‡∏Å', items: [] },
    { id: 'do', name: '‡πÇ‡∏î‡πâ', items: [] },
    { id: 'dew', name: '‡∏î‡∏¥‡∏ß', items: [] },
    { id: 'taw', name: '‡∏ï‡∏≤‡∏ß', items: [] },
  ]);
  const [sharedItems, setSharedItems] = useState([]); // [{ id, name, price, sharers: [personId1, personId2] }]
  const [shippingCost, setShippingCost] = useState(0);
  const [discount, setDiscount] = useState(0);

  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡πÉ‡∏´‡∏°‡πà
  const [newPersonName, setNewPersonName] = useState('');

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ô‡πÉ‡∏´‡∏°‡πà
  const addPerson = () => {
    if (newPersonName.trim() !== '') {
      setPeople([...people, { id: Date.now().toString(), name: newPersonName.trim(), items: [] }]);
      setNewPersonName('');
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏Ñ‡∏ô
  const removePerson = (personId) => {
    setPeople(prevPeople => prevPeople.filter(p => p.id !== personId));
    // ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ß‡∏Å‡πÄ‡∏Ç‡∏≤‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏ß‡∏¢
    setSharedItems(prevSharedItems => prevSharedItems.map(item => ({
      ...item,
      sharers: item.sharers.filter(sharerId => sharerId !== personId)
    })));
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô
  const addItemToPerson = (personId, itemName, itemPrice) => {
    // ‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î‡∏•‡∏ö
    if (!isNaN(itemPrice) && parseFloat(itemPrice) >= 0) {
      setPeople(prevPeople => prevPeople.map(p =>
        p.id === personId
          ? { ...p, items: [...p.items, { id: Date.now().toString(), name: itemName.trim(), price: parseFloat(itemPrice) }] }
          : p
      ));
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô
  const removeItemFromPerson = (personId, itemId) => {
    setPeople(prevPeople => prevPeople.map(p =>
      p.id === personId
        ? { ...p, items: p.items.filter(item => item.id !== itemId) }
        : p
    ));
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå
  const addSharedItem = (itemName, itemPrice, sharerIds) => {
    // ‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î‡∏•‡∏ö ‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÅ‡∏ä‡∏£‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ñ‡∏ô
    if (!isNaN(itemPrice) && parseFloat(itemPrice) >= 0 && sharerIds.length > 0) {
      setSharedItems(prevSharedItems => [...prevSharedItems, { id: Date.now().toString(), name: itemName.trim(), price: parseFloat(itemPrice), sharers: sharerIds }]);
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå
  const removeSharedItem = (sharedItemId) => {
    setSharedItems(prevSharedItems => prevSharedItems.filter(item => item.id !== sharedItemId));
  };

  // --- ‡∏ï‡∏£‡∏£‡∏Å‡∏∞‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì ---
  const calculateTotals = () => {
    const calculation = {};
    let totalOverallSubtotal = 0; // ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå

    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô
    people.forEach(p => {
      calculation[p.id] = {
        name: p.name,
        individualSubtotal: 0,
        sharedItemContribution: 0,
        subtotalBeforeProportion: 0, // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß + ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå
        proportionalShipping: 0,
        proportionalDiscount: 0,
        totalPay: 0,
      };

      // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏¢‡πà‡∏≠‡∏¢‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
      p.items.forEach(item => {
        calculation[p.id].individualSubtotal += item.price;
      });
    });

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå
    sharedItems.forEach(sItem => {
      if (sItem.sharers.length > 0) {
        const perSharerCost = sItem.price / sItem.sharers.length;
        sItem.sharers.forEach(sharerId => {
          if (calculation[sharerId]) { // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÅ‡∏ä‡∏£‡πå‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            calculation[sharerId].sharedItemContribution += perSharerCost;
          }
        });
      }
    });

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏¢‡πà‡∏≠‡∏¢‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    people.forEach(p => {
      calculation[p.id].subtotalBeforeProportion =
        calculation[p.id].individualSubtotal + calculation[p.id].sharedItemContribution;
      totalOverallSubtotal += calculation[p.id].subtotalBeforeProportion;
    });

    // ‡πÅ‡∏ö‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô
    people.forEach(p => {
      if (totalOverallSubtotal > 0) { // ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
        const proportion = calculation[p.id].subtotalBeforeProportion / totalOverallSubtotal;
        calculation[p.id].proportionalShipping = shippingCost * proportion;
        calculation[p.id].proportionalDiscount = discount * proportion;
      } else {
        // ‡∏´‡∏≤‡∏Å‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á/‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô
        calculation[p.id].proportionalShipping = 0;
        calculation[p.id].proportionalDiscount = 0;
      }

      // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
      calculation[p.id].totalPay =
        calculation[p.id].subtotalBeforeProportion +
        calculation[p.id].proportionalShipping -
        calculation[p.id].proportionalDiscount;
    });

    return calculation;
  };

  const calculatedResults = calculateTotals();

  // ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡πà‡∏ß‡∏ô
  const SectionCard = ({ title, icon, description, children, bgColor, borderColor, textColor }) => (
    <section className={`mb-8 p-6 ${bgColor} rounded-2xl shadow-lg border ${borderColor}`}>
      <h2 className={`text-3xl font-extrabold ${textColor || 'text-gray-100'} mb-3 flex items-center`}>
        {icon}
        {title}
      </h2>
      {description && <p className="text-gray-400 mb-4 text-md">{description}</p>}
      {children}
    </section>
  );


  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 to-black flex items-center justify-center p-4 sm:p-6 font-inter text-gray-100">
      {/* ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ container ‡∏´‡∏•‡∏±‡∏Å‡πÄ‡∏õ‡πá‡∏ô fluid ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô */}
      <div className="bg-gray-900 p-6 sm:p-10 lg:p-12 rounded-3xl shadow-2xl w-full max-w-full md:max-w-6xl xl:max-w-screen-xl border border-gray-700 mx-auto">
        <h1 className="text-5xl sm:text-6xl font-extrabold text-center text-white mb-10 tracking-tight leading-tight">
          üçΩÔ∏è ‡πÅ‡∏ö‡πà‡∏á‡∏ö‡∏¥‡∏•‡∏Ñ‡πà‡∏≤‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô
        </h1>

        {/* ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ô */}
        <SectionCard
          title="‡πÉ‡∏Ñ‡∏£‡∏Å‡∏¥‡∏ô‡∏ö‡πâ‡∏≤‡∏á?"
          icon={<svg xmlns="http://www.w3.org/2000/svg" className="h-9 w-9 mr-3 text-purple-400" viewBox="0 0 24 24" fill="currentColor"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.88 6-3.88s5.97 1.89 6 3.88c-1.29 1.94-3.5 3.22-6 3.22z"/></svg>}
          description="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏£‡πà‡∏ß‡∏°‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ"
          bgColor="bg-gray-800"
          borderColor="border-purple-800"
        >
          <div className="flex flex-col sm:flex-row gap-3 mb-4">
            <input
              type="text"
              className="flex-grow p-3 border border-gray-700 rounded-xl focus:outline-none focus:ring-2 focus:ring-purple-600 shadow-sm transition-all duration-200 bg-gray-700 text-white placeholder-gray-400"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏•‡∏¥‡∏ã, ‡∏ö‡πá‡∏≠‡∏ö"
              value={newPersonName}
              onChange={(e) => setNewPersonName(e.target.value)}
              onKeyPress={(e) => { if (e.key === 'Enter') addPerson(); }}
            />
            <button
              onClick={addPerson}
              className="px-6 py-3 bg-purple-600 text-white font-semibold rounded-xl shadow-lg hover:bg-purple-700 transition duration-300 transform hover:scale-105 active:scale-95"
            >
              ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ô
            </button>
          </div>
          <div className="flex flex-wrap gap-2">
            {people.length === 0 ? (
              <p className="text-gray-500 italic">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°</p>
            ) : (
              people.map(p => (
                <span key={p.id} className="flex items-center bg-purple-800 text-purple-100 px-4 py-2 rounded-full text-base font-medium shadow-md transition-all duration-200 hover:bg-purple-700">
                  {p.name}
                  <button
                    onClick={() => removePerson(p.id)}
                    className="ml-2 text-purple-300 hover:text-red-400 transition-colors duration-200"
                    aria-label={`‡∏•‡∏ö ${p.name}`}
                  >
                    {/* ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞ SVG */}
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                      <path fillRule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm6 0a1 1 0 11-2 0v6a1 1 0 112 0V8z" clipRule="evenodd" />
                    </svg>
                  </button>
                </span>
              ))
            )}
          </div>
        </SectionCard>

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß - ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô 3 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≠‡πÉ‡∏´‡∏ç‡πà */}
        <SectionCard
          title="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß"
          icon={<svg xmlns="http://www.w3.org/2000/svg" className="h-9 w-9 mr-3 text-blue-400" viewBox="0 0 24 24" fill="currentColor"><path d="M16 6H8c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zM9 16H7v-2h2v2zm0-4H7V8h2v4zm4 4h-2v-2h2v2zm0-4h-2V8h2v4zm4 4h-2v-2h2v2zm0-4h-2V8h2v4z"/></svg>}
          description="‡∏õ‡πâ‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô‡∏™‡∏±‡πà‡∏á‡πÄ‡∏≠‡∏á"
          bgColor="bg-gray-800"
          borderColor="border-blue-800"
        >
          {people.length === 0 ? (
            <p className="text-gray-400 italic">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</p>
          ) : (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-6"> {/* ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ */}
              {people.map(p => (
                <PersonOrderInput
                  key={p.id}
                  person={p}
                  addItem={addItemToPerson}
                  removeItem={removeItemFromPerson}
                />
              ))}
            </div>
          )}
        </SectionCard>

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå */}
        <SectionCard
          title="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå"
          icon={<svg xmlns="http://www.w3.org/2000/svg" className="h-9 w-9 mr-3 text-green-400" viewBox="0 0 24 24" fill="currentColor"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v6h-2zm0 8h2v2h-2z"/></svg>}
          description="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏ô ‡∏Ç‡∏≠‡∏á‡∏Å‡∏¥‡∏ô‡πÄ‡∏•‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô‡πÅ‡∏ä‡∏£‡πå‡∏Å‡∏±‡∏ô ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡πÉ‡∏Ñ‡∏£‡πÅ‡∏ä‡∏£‡πå‡∏ö‡πâ‡∏≤‡∏á"
          bgColor="bg-gray-800"
          borderColor="border-green-800"
        >
          {people.length < 1 ? (
            <p className="text-gray-400 italic">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ñ‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå</p>
          ) : (
            <SharedItemInput
              people={people}
              addSharedItem={addSharedItem}
              sharedItems={sharedItems}
              removeSharedItem={removeSharedItem}
            />
          )}
        </SectionCard>

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î */}
        <SectionCard
          title="‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° / ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î"
          icon={<svg xmlns="http://www.w3.org/2000/svg" className="h-9 w-9 mr-3 text-yellow-400" viewBox="0 0 24 24" fill="currentColor"><path d="M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm-1 14H5c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h14c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1zM12 9c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"/></svg>}
          description="‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏° ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏´‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô"
          bgColor="bg-gray-800"
          borderColor="border-yellow-800"
        >
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-6">
            <div>
              <label htmlFor="shipping" className="block text-gray-300 text-lg font-medium mb-2">‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á (‡∏ø):</label>
              <input
                id="shipping"
                type="number"
                min="0"
                step="0.01"
                className="w-full p-3 border border-gray-700 rounded-xl focus:outline-none focus:ring-2 focus:ring-yellow-600 shadow-sm transition-all duration-200 bg-gray-700 text-white placeholder-gray-400"
                value={shippingCost}
                onChange={(e) => setShippingCost(parseFloat(e.target.value) || 0)}
              />
            </div>
            <div>
              <label htmlFor="discount" className="block text-gray-300 text-lg font-medium mb-2">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î (‡∏ø):</label>
              <input
                id="discount"
                type="number"
                min="0"
                step="0.01"
                className="w-full p-3 border border-gray-700 rounded-xl focus:outline-none focus:ring-2 focus:ring-yellow-600 shadow-sm transition-all duration-200 bg-gray-700 text-white placeholder-gray-400"
                value={discount}
                onChange={(e) => setDiscount(parseFloat(e.target.value) || 0)}
              />
            </div>
          </div>
        </SectionCard>

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì */}
        <SectionCard
          title="‡∏™‡∏£‡∏∏‡∏õ‡∏ö‡∏¥‡∏•‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢"
          icon={<svg xmlns="http://www.w3.org/2000/svg" className="h-9 w-9 mr-3 text-indigo-400" viewBox="0 0 24 24" fill="currentColor"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 15h2v-6h-2v6zm0-8h2V7h-2v2z"/></svg>}
          description="‡∏î‡∏π‡∏ß‡πà‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
          bgColor="bg-gray-800"
          borderColor="border-indigo-800"
        >
          {people.length === 0 ? (
            <p className="text-gray-400 italic">‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏™‡∏£‡∏∏‡∏õ</p>
          ) : (
            <>
              {/* ‡∏™‡∏£‡∏∏‡∏õ‡πÇ‡∏î‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {Object.values(calculatedResults).map(result => (
                  <div key={result.name} className="p-5 bg-gray-900 rounded-xl shadow-md border border-indigo-900 transform hover:scale-[1.02] transition-transform duration-200 ease-in-out">
                    <h3 className="text-2xl font-bold text-white mb-3 border-b pb-2 border-indigo-800">{result.name}</h3>
                    <ul className="text-gray-300 text-base space-y-2 mb-3">
                      <li><span className="font-semibold">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß:</span> <span className="float-right">‡∏ø{result.individualSubtotal.toFixed(2)}</span></li>
                      <li><span className="font-semibold">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå:</span> <span className="float-right">‡∏ø{result.sharedItemContribution.toFixed(2)}</span></li>
                      <li className="font-bold text-gray-200 border-t pt-2 mt-2 border-gray-700"><span className="font-semibold">‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏¢‡πà‡∏≠‡∏¢:</span> <span className="float-right">‡∏ø{result.subtotalBeforeProportion.toFixed(2)}</span></li>
                      <li className="text-red-400"><span className="font-semibold">‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô:</span> <span className="float-right">- ‡∏ø{result.proportionalDiscount.toFixed(2)}</span></li>
                      <li className="text-green-400"><span className="font-semibold">‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô:</span> <span className="float-right">+ ‡∏ø{result.proportionalShipping.toFixed(2)}</span></li>
                    </ul>
                    <p className="mt-4 text-xl font-extrabold text-indigo-400 bg-indigo-900 p-3 rounded-lg flex justify-between items-center">
                      <span>‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</span>
                      <span className="text-3xl">‡∏ø{result.totalPay.toFixed(2)}</span>
                    </p>
                  </div>
                ))}
              </div>

              {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡πà‡∏≠ */}
              <div className="mt-8 p-6 bg-gray-900 rounded-xl shadow-lg border border-gray-700">
                <h3 className="text-2xl font-bold text-white mb-4 border-b pb-2 border-gray-700">‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏î‡πà‡∏ß‡∏ô</h3>
                <table className="w-full text-left text-gray-300">
                  <thead className="border-b border-gray-700">
                    <tr>
                      <th className="py-3 px-4 font-semibold text-lg">‡∏ä‡∏∑‡πà‡∏≠</th>
                      <th className="py-3 px-4 text-right font-semibold text-lg">‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞ (‡∏ø)</th>
                    </tr>
                  </thead>
                  <tbody>
                    {Object.values(calculatedResults).map(result => (
                      <tr key={result.name} className="border-b border-gray-800 last:border-b-0 hover:bg-gray-800 transition-colors">
                        <td className="py-2 px-4">{result.name}</td>
                        <td className="py-2 px-4 text-right font-semibold text-xl text-white">{result.totalPay.toFixed(2)}</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </>
          )}
        </SectionCard>
      </div>
    </div>
  );
}

// ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô
function PersonOrderInput({ person, addItem, removeItem }) {
  const [itemName, setItemName] = useState('');
  const [itemPrice, setItemPrice] = useState('');

  const handleAddItem = () => {
    addItem(person.id, itemName, itemPrice);
    setItemName('');
    setItemPrice('');
  };

  return (
    <div className="mb-4 p-4 border border-blue-900 rounded-xl bg-gray-900 shadow-sm">
      <h3 className="text-xl font-bold text-blue-300 mb-3">{person.name}</h3>
      <div className="flex flex-col sm:flex-row gap-3 mb-3">
        <input
          type="text"
          className="flex-grow p-2 border border-gray-700 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-600 transition-all duration-200 bg-gray-800 text-white placeholder-gray-400"
          placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)"
          value={itemName}
          onChange={(e) => setItemName(e.target.value)}
        />
        <input
          type="number"
          min="0"
          step="0.01"
          className="w-full sm:w-28 p-2 border border-gray-700 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-600 transition-all duration-200 bg-gray-800 text-white placeholder-gray-400"
          placeholder="‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏ø)"
          value={itemPrice}
          onChange={(e) => setItemPrice(e.target.value)}
          onKeyPress={(e) => { if (e.key === 'Enter') handleAddItem(); }}
        />
        <button
          onClick={handleAddItem}
          className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-300 shadow-md active:scale-95"
        >
          ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        </button>
      </div>
      {person.items.length > 0 && (
        <ul className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 text-gray-300 mt-4 border-t border-gray-700 pt-3">
          {person.items.map(item => (
            <li key={item.id} className="flex justify-between items-center bg-gray-800 px-3 py-2 rounded-md transition-all duration-200 hover:bg-gray-700">
              <span className="font-medium">{item.name || '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠'}</span> {/* ‡πÅ‡∏™‡∏î‡∏á '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠' ‡∏´‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ */}
              <span className="flex items-center">
                ‡∏ø{item.price.toFixed(2)}
                <button
                  onClick={() => removeItem(person.id, item.id)}
                  className="ml-3 text-blue-400 hover:text-blue-200 transition-colors duration-200"
                  aria-label={`‡∏•‡∏ö ${item.name || '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£'}`}
                >
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                    <path fillRule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm6 0a1 1 0 11-2 0v6a1 1 0 112 0V8z" clipRule="evenodd" />
                  </svg>
                </button>
              </span>
            </li>
          ))}
        </ul>
      )}
    </div>
  );
}

// ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå
function SharedItemInput({ people, addSharedItem, sharedItems, removeSharedItem }) {
  const [itemName, setItemName] = useState('');
  const [itemPrice, setItemPrice] = useState('');
  const [selectedSharers, setSelectedSharers] = useState([]);

  const handleAddSharedItem = () => {
    addSharedItem(itemName, itemPrice, selectedSharers);
    setItemName('');
    setItemPrice('');
    setSelectedSharers([]);
  };

  const handleSharerToggle = (personId) => {
    if (selectedSharers.includes(personId)) {
      setSelectedSharers(selectedSharers.filter(id => id !== personId));
    } else {
      setSelectedSharers([...selectedSharers, personId]);
    }
  };

  return (
    <div className="p-4 border border-green-900 rounded-xl bg-gray-900 shadow-sm">
      <div className="flex flex-col sm:flex-row gap-3 mb-3">
        <input
          type="text"
          className="flex-grow p-2 border border-gray-700 rounded-lg focus:outline-none focus:ring-1 focus:ring-green-600 transition-all duration-200 bg-gray-800 text-white placeholder-gray-400"
          placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)"
          value={itemName}
          onChange={(e) => setItemName(e.target.value)}
        />
        <input
          type="number"
          min="0"
          step="0.01"
          className="w-full sm:w-28 p-2 border border-gray-700 rounded-lg focus:outline-none focus:ring-1 focus:ring-green-600 transition-all duration-200 bg-gray-800 text-white placeholder-gray-400"
          placeholder="‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏ø)"
          value={itemPrice}
          onChange={(e) => setItemPrice(e.target.value)}
          onKeyPress={(e) => { if (e.key === 'Enter') handleAddSharedItem(); }}
        />
      </div>
      <div className="mb-4">
        <label className="block text-gray-300 text-lg font-medium mb-2">‡πÉ‡∏Ñ‡∏£‡πÅ‡∏ä‡∏£‡πå‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏ö‡πâ‡∏≤‡∏á?</label>
        <div className="flex flex-wrap gap-2">
          {people.map(p => (
            <button
              key={p.id}
              onClick={() => handleSharerToggle(p.id)}
              className={`px-4 py-2 rounded-full text-sm font-medium transition-colors duration-200 shadow-md transform hover:scale-105 active:scale-95
                ${selectedSharers.includes(p.id) ? 'bg-green-600 text-white' : 'bg-green-800 text-green-100 hover:bg-green-700'}`}
            >
              {p.name}
            </button>
          ))}
        </div>
      </div>
      <button
        onClick={handleAddSharedItem}
        className="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition duration-300 shadow-md w-full active:scale-95"
      >
        ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå
      </button>

      {sharedItems.length > 0 && (
        <div className="mt-4 border-t border-gray-700 pt-4">
          <h4 className="text-lg font-semibold text-green-300 mb-2">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</h4>
          <ul className="space-y-2 text-gray-300">
            {sharedItems.map(item => (
              <li key={item.id} className="flex justify-between items-center bg-gray-800 px-3 py-2 rounded-md transition-all duration-200 hover:bg-gray-700">
                <span className="font-medium">
                  {item.name || '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠'} - ‡∏ø{item.price.toFixed(2)} (‡πÅ‡∏ä‡∏£‡πå‡πÇ‡∏î‡∏¢: {item.sharers.map(id => people.find(p => p.id === id)?.name).join(', ')})
                </span>
                <button
                  onClick={() => removeSharedItem(item.id)}
                  className="ml-3 text-green-400 hover:text-green-200 transition-colors duration-200"
                  aria-label={`‡∏•‡∏ö ${item.name || '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£'}`}
                >
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                    <path fillRule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm6 0a1 1 0 11-2 0v6a1 1 0 112 0V8z" clipRule="evenodd" />
                  </svg>
                </button>
              </li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
}

export default App;
